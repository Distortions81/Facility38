package main

const CellWidth  float = 12.0 // must be at least 1
const CellHeight float = 12.0 // must be at least 1

func Fragment(position vec4, _ vec2, _ vec4) vec4 {
	// find the position of the cell we are working on
	baseX := floor(position.x/CellWidth)*CellWidth
	baseY := floor(position.y/CellHeight)*CellHeight

	// iterate the pixelization cell
	colorAcc := vec4(0.0) // color accumulator
	for y := 0.0; y < CellHeight; y += 1.0 {
		for x := 0.0; x < CellWidth; x += 1.0 {
			pixCoords := vec2(baseX + x, baseY + y)
			colorAcc += imageColorAtPixel(pixCoords)
		}
	}

	// divide the color to average it
	return colorAcc/(CellWidth*CellHeight)
}

// Helper function to access an image's color at the given pixel coordinates.
func imageColorAtPixel(pixelCoords vec2) vec4 {
	sizeInPixels := imageSrcTextureSize()
	offsetInTexels, _ := imageSrcRegionOnTexture()
	adjustedTexelCoords := pixelCoords/sizeInPixels + offsetInTexels
	return imageSrc0At(adjustedTexelCoords)
}